y = NULL
for (i in 1:length(train$Origin)){
y[i] <- ifelse(train$Origin[i]=="American" | train$Origin[i]=="British","American-British","Other")
}
train$Origin <- as.factor(y)
# Collapse Place into three levels
y = NULL
for (i in 1:length(train$Place)){
y[i] <- ifelse(train$Place[i]=="London" | train$Place[i]=="South Kensington","London", ifelse(train$Place[i]=="New York", "New York", "Other"))
}
train$Place <- as.factor(y)
dat2 <- select(dat, -c(Price,Registry,Artist,Auction,Lot,Place,Alive,Year,Signed,Month))
repeated <- sum(duplicated(dat2))
train <- add_column(train, PriceR = NA, .after = 1)
Quandl.api_key("ud-UhDr6Hec1Qdt8je9_")
CPI <- Quandl("FRED/CPIAUCNS", start_date="2000-01-01", end_date="2012-12-01")
CPI <- tbl_df(CPI)
# Real Price for Dic 2012
cal <- c("JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC")
baseCPI <- CPI$Value[CPI$Date == "2012-12-1"]
k <- 1
m <- tbl_df(matrix(nrow =  144, ncol = 2))
i <- 1
for (i in 1:12) {
year <- paste(2000+i, sep = "")
yearOp <- train$Year == year
j <-  1
for (j in 1:12) {
month <- cal[j]
monthOp <- train$Month == month
andOp <- yearOp & monthOp
if (length(which(andOp)) == 0 ) { next }
if (j < 10) {
dateCPI <- paste(2000+i, "-", "0", j, "-", "01", sep = "")
} else {
dateCPI <- paste(2000+i, "-", j, "-", "01", sep = "")
}
valCPI <- CPI$Value[CPI$Date == dateCPI]
change <- 1 + (baseCPI - valCPI)/valCPI
train$PriceR[which(andOp)] <- train$Price[which(andOp)]*change
# Create table to determine dates with or without observations
m[k,1] <- dateCPI
m[k,2] <- as.numeric(as.character(length(which(andOp))))
k <- k + 1
}
}
train <- select(train, -Price)
train <- add_column(train, PriceLN = log(train$PriceR), .after = 0)
train2 <- select(train, -PriceR)
train <- select(train, -PriceLN)
train2 <- add_column(train2, AreaLN = log(train2$Area), .after = 7)
train2 <- select(train2, -Area)
# Relevel Variables
train2$Artist <- relevel(train2$Artist, ref = 61)
train2$Material <- relevel(train2$Material, ref =3)
train2$Auction <- relevel(train2$Auction, ref =2)
train2$Month <- relevel(train2$Month, ref =9)
train2$Origin <- relevel(train2$Origin, ref =2)
train2$Place <- relevel(train2$Place, ref =3)
set.seed(25)
smp_size <- floor(0.95*nrow(train2))
train_ind = sample(seq_len(nrow(train2)),size = smp_size)
trainFinal =train2[train_ind,]
testFinal=train2[-train_ind,]
fit1 <- lm(formula = PriceLN ~ . -Origin, data = trainFinal)
fit2 <- lm(formula = PriceLN ~ . -Artist, data = trainFinal)
fit3 <- lm(formula = PriceLN ~ . -Place -Origin, data = trainFinal)
ABR <- matrix(nrow = 3, ncol = 4)
ABR <- tbl_df(ABR)
names(ABR) <- c("Model", "AIC", "BIC", "R2")
ABR[,1] <- c("Model 1", "Model 2", "Model 3")
ABR[1,2] <- round(AIC(fit1),0)
ABR[2,2] <- round(AIC(fit2),0)
ABR[3,2] <- round(AIC(fit3),0)
ABR[1,3] <- round(BIC(fit1),0)
ABR[2,3] <- round(BIC(fit2),0)
ABR[3,3] <- round(BIC(fit3),0)
ABR[1,4] <- round(summary(fit1)$r.squared, 4)
ABR[2,4] <- round(summary(fit2)$r.squared, 4)
ABR[3,4] <- round(summary(fit3)$r.squared, 4)
## Create Index ##
index <- matrix(nrow = 12, ncol = 2)
index <- tbl_df(index)
names(index) <- c("Year", "Index")
index[,1] <- c(2001:2012)
index[1,2] <- 100
i <- 2
for (i in 2:12) {
year <- paste("Year", 2000+i, sep = "")
index[i,2] <- 100*exp(coef(fit1)[year])
rm(year)
}
## Correct index for Geometric Average ##
# Create year vector
year.v <- vector(mode = 'character')
year.v <- as.character(trainFinal$Year)
# Estimate variance of the residuals per period
resid <- residuals(fit1)
residVar <- matrix(nrow = 12, ncol = 2)
residVar <- tbl_df(residVar)
names(residVar) <- c("Year", "Variance")
residVar[,1] <- c(2001:2012)
i <- 1
for (i in 1:12) {
year <- as.character(2000 + i)
yearOp <- year.v == year
residVar[i,2] <- var(resid[yearOp])
rm(year, yearOp)
}
# Create Corrected Index
index <- add_column(index, Corrected.Index = NA, .after = 2)
index[1,3] <- 100
i <- 2
for (i in 2:12) {
year <- paste("Year", 2000+i, sep = "")
index[i,3] <- 100*exp(coef(fit1)[year] + 1/2*(residVar[i,2] - residVar[1,2]))
rm(year)
}
# S&P Index
#Quandl.api_key("ud-UhDr6Hec1Qdt8je9_")
#SP <- Quandl("YALE/SP_SPCI", start_date="2001-12-31", end_date="2012-12-31")
SP <- read.csv("SPI.csv")
# Normalize Index
baseSP <- SP$Value[SP$Year == "2001-12-31"]
index <- add_column(index, SP = NA, .after = 3)
i <- 1
for (i in 1:12) {
index[13-i,4] <- SP$Value[i]*100/baseSP
}
## Returns ##
returns <- matrix(nrow = 12, ncol = 2)
returns <- tbl_df(returns)
names(returns) <- c("Year", "Corrected Returns (%)")
returns[,1] <- c(2001:2012)
returns[1,2] <- NA
# Corrected Returns
i <- 2
for (i in 2:12) {
returns[i,2] <- ((index$Corrected.Index[i]/index$Corrected.Index[i-1])-1)*100
}
returns <- add_column(returns, "S&P Returns (%)" = NA, .after = 2)
returns[1,3] <- NA
# S&P Returns
i <- 2
for (i in 2:12) {
returns[i,3] <- ((index$SP[i]/index$SP[i-1])-1)*100
}
## Geometric Average of Returns
returns[13,1] <- "TWRR"
returns[13,2] <- round(((prod((1+returns[,2]/100), na.rm = TRUE))^(1/11) - 1)*100, 2)
returns[13,3] <- round(((prod((1+returns[,3]/100), na.rm = TRUE))^(1/11) - 1)*100, 2)
Area <- ifelse(trainFinal$AreaLN < 10, "Normal", "Large")
areaTest <- ifelse(testFinal$AreaLN < 10, "Normal", "Large")
pred <- predict(fit1, testFinal)
real <- testFinal$PriceLN
real_pred <- data.frame(cbind(testFinal[,2], testFinal[,3], testFinal[,6], areaTest, real, pred))
names(real_pred) <- c("Artist", "Origin", "Place", "Area", "real", "pred")
real_pred <- tbl_df(real_pred)
value <- train2$PriceLN < 12.6
trainReduced <- train2[value,]
set.seed(25)
smp_size <- floor(0.95*nrow(trainReduced))
train_ind = sample(seq_len(nrow(trainReduced)),size = smp_size)
trainReduced =trainReduced[train_ind,]
testReduced=trainReduced[-train_ind,]
fit4 <- lm(formula = PriceLN ~ . -Origin, data = trainReduced)
## Create Index ##
index2 <- matrix(nrow = 12, ncol = 2)
index2 <- tbl_df(index2)
names(index2) <- c("Year", "Index")
index2[,1] <- c(2001:2012)
index2[1,2] <- 100
i <- 2
for (i in 2:12) {
year <- paste("Year", 2000+i, sep = "")
index2[i,2] <- 100*exp(coef(fit4)[year])
rm(year)
}
## Correct index for Geometric Average ##
# Create year vector
year.v <- vector(mode = 'character')
year.v <- as.character(trainReduced$Year)
# Estimate variance of the residuals per period
resid2 <- residuals(fit4)
residVar2 <- matrix(nrow = 12, ncol = 2)
residVar2 <- tbl_df(residVar2)
names(residVar2) <- c("Year", "Variance")
residVar2[,1] <- c(2001:2012)
i <- 1
for (i in 1:12) {
year <- as.character(2000 + i)
yearOp <- year.v == year
residVar2[i,2] <- var(resid2[yearOp])
rm(year, yearOp)
}
# Create Correctec Index
index2 <- add_column(index2, Corrected.Index = NA, .after = 2)
index2[1,3] <- 100
i <- 2
for (i in 2:12) {
year <- paste("Year", 2000+i, sep = "")
index2[i,3] <- 100*exp(coef(fit4)[year] + 1/2*(residVar2[i,2] - residVar2[1,2]))
rm(year)
}
## Returns ##
returns2 <- matrix(nrow = 12, ncol = 2)
returns2 <- tbl_df(returns2)
names(returns2) <- c("Year", "Corrected Returns (%)")
returns2[,1] <- c(2001:2012)
returns2[1,2] <- NA
# Corrected Returns
i <- 2
for (i in 2:12) {
returns2[i,2] <- ((index2$Corrected.Index[i]/index2$Corrected.Index[i-1])-1)*100
}
## Geometric Average of Returns
returns2[13,1] <- "TWRR"
returns2[13,2] <- round(((prod((1+returns2[,2]/100), na.rm = TRUE))^(1/11) - 1)*100, 2)
areaReduced <- ifelse(testReduced$AreaLN < 10, "Normal", "Large")
pred2 <- predict(fit4, testReduced)
real2 <- testReduced$PriceLN
real_pred2 <- data.frame(cbind(testReduced[,2], testReduced[,3], testReduced[,6], areaReduced, real2, pred2))
names(real_pred2) <- c("Artist", "Origin", "Place", "Area", "real", "pred")
real_pred2 <- tbl_df(real_pred2)
tiff("SP.tiff", res=50)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
SP
SP
tiff("SP.tiff", res=30)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
tiff("Area.tiff", res=30)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
SP
tiff("SP.tiff")
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
SP
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
png("SP.png", res = 50)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
png("SP.png", res = 300)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
png("SP.png", res = 300)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
png("SP.png", res = 300)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
dev.off()
SP
png("SP.png", res = 300)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
png("SP.png", res = 50)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
png("SP.png", res = 96)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
png("SP.png", res = 80)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
png("SP.png", res = 75)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
png("den1.png", res = 75)
plot(hclust(dist(table(dat$Origin))), xlab = "")
dev.off()
png("figures/SP.png", res = 75)
SP <- ggplot(train2, aes(x=PriceLN, y=AreaLN, color = Auction))
SP <- SP + geom_point()
SP <- SP + labs(title="Log of Price vs Log of Area" , x="Log of Price", y = "Log of Area") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
SP
dev.off()
table(train2)
table(train2$Year)
histogram(train2$Year)
if (!require(tidyverse)) { install.packages("tidyverse") }
if (!require (broom)) {install.packages("broom")}
plot9 <- ggplot(train2, aes(x=Year, color=Year))
plot9 <- plot9 + + geom_histogram()
plot9 <- ggplot(train2, aes(x=Year, color=Year))
plot9 <- plot9 + geom_histogram()
plot9
plot9 <- ggplot(train2, aes(x=Year, color=Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", colour = Year)
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", colour = "Year")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(color = Year))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(color = Year))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
if(!require(RColorBrewer)){install.packages("RColorBrewer")}
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(color = Year))
plot9 <- plot9 + scale_fill_brewer(palette="Dark2")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year, colour = Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_brewer(palette="Dark2")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year, colour = Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_color_brewer(palette="Dark2")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year, colour = Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Dark2")), (colourCount))
plot9 <- ggplot(train2, aes(x=Year, colour = Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_manual(values = getPalette(colourCount))
plot9 <- ggplot(train2, aes(x=Year, colour = Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_brew()
plot9 <- ggplot(train2, aes(x=Year, colour = Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_brewer()
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year)
plot9 <- plot9 + scale_fill_brewer()
plot9 <- ggplot(train2, aes(x=Year)
plot9 <- plot9 + scale_fill_brewer()
plot9 <- ggplot(train2, aes(x=Year)
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_brewer()
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count")
plot9 <- plot9 + scale_fill_brewer(palette="Dark2")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_brewer(palette="Dark2")
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_brewer(palette="Dark2", 12)
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_brewer(palette="Dark2", n = 12)
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_brewer(palette="Dark2", 12)
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 + plot9 scale_color_gradient2(midpoint=mid, low="blue", mid="white", high="red", space ="Lab" )
#plot9 <- plot9 + scale_fill_brewer(palette="Dark2", 12)
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_color_gradient2(midpoint=mid, low="blue", mid="white", high="red", space ="Lab" )
#plot9 <- plot9 + scale_fill_brewer(palette="Dark2", 12)
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
if(!require(wesanderson)){install.packages("wesanderson")}
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_manual(values=wes_palette(n=12, name="GrandBudapest"))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_manual(values=wes_palette(n=12, name="Zissou"))
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_manual(values=wes_palette(n=12, name="Zissou1"))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_manual(values=wes_palette(name="Zissou1", type = "continuous"))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
plot9 <- ggplot(train2, aes(x=Year))
plot9 <- plot9 + geom_histogram(stat="count", aes(fill = Year))
plot9 <- plot9 + scale_fill_manual(values=wes_palette(n = 12, name="Zissou1", type = "continuous"))
plot9 <- plot9 + labs(title="Artworks sold by Year" , x="Year", y = "Count")
plot9 <- plot9 + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=13), axis.title=element_text(size=15), legend.text=element_text(size=13), legend.position='none')
plot9
sigma(fit1)^2
sigma(fit1)^2
(sigma(fit1)^2-sum((pred-real)^2)/dim(testFinal)[1])/sigma(fit1)^2
abs(sigma(fit1)^2-sum((pred-real)^2)/dim(testFinal)[1])/sigma(fit1)^2
abs(sigma(fit1)^2-sum((pred-real)^2)/dim(testFinal)[1])*100/sigma(fit1)^2
sum((pred-real)^2)/dim(testFinal)[1]
png("figures/index_red.png", res = 75)
plot8 <- ggplot(data = index2, mapping = aes(x = Year))
plot8 <- plot8 + geom_point(aes(y = Corrected.Index), shape = 23) + geom_line(aes(y = Corrected.Index, colour = "Art w/o High Value"))
plot8 <- plot8 + geom_point(data = index, aes(y = Corrected.Index), shape = 23) + geom_line(data = index, aes(y = Corrected.Index, colour = "Art w/ High Value"))
plot8 <- plot8 + labs(title="Pop Art indices", y = "Index", x = "Year", colour = "Index Type") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=10), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot8 <- plot8 + scale_x_continuous(breaks = c(2001:2012))
plot8 <- plot8 + annotate("text", x = 2004, y = 250, label = paste("TWRR w/ High Value ", returns[13,2], "%", sep = ""), size = 1)
plot8 <- plot8 + annotate("text", x = 2004, y = 240, label = paste("TWRR w/o High Value ", returns2[13,2], "%", sep = ""), size = 1)
plot8
dev.off()
png("figures/index_red.png", res = 75)
plot8 <- ggplot(data = index2, mapping = aes(x = Year))
plot8 <- plot8 + geom_point(aes(y = Corrected.Index), shape = 23) + geom_line(aes(y = Corrected.Index, colour = "Art w/o High Value"))
plot8 <- plot8 + geom_point(data = index, aes(y = Corrected.Index), shape = 23) + geom_line(data = index, aes(y = Corrected.Index, colour = "Art w/ High Value"))
plot8 <- plot8 + labs(title="Pop Art indices", y = "Index", x = "Year", colour = "Index Type") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=10), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot8 <- plot8 + scale_x_continuous(breaks = c(2001:2012))
plot8 <- plot8 + annotate("text", x = 2004, y = 250, label = paste("TWRR w/ High Value ", returns[13,2], "%", sep = ""), size = 3)
plot8 <- plot8 + annotate("text", x = 2004, y = 240, label = paste("TWRR w/o High Value ", returns2[13,2], "%", sep = ""), size = 3)
plot8
dev.off()
png("figures/index_red.png", res = 75)
plot8 <- ggplot(data = index2, mapping = aes(x = Year))
plot8 <- plot8 + geom_point(aes(y = Corrected.Index), shape = 23) + geom_line(aes(y = Corrected.Index, colour = "Art w/o High Value"))
plot8 <- plot8 + geom_point(data = index, aes(y = Corrected.Index), shape = 23) + geom_line(data = index, aes(y = Corrected.Index, colour = "Art w/ High Value"))
plot8 <- plot8 + labs(title="Pop Art indices", y = "Index", x = "Year", colour = "Index Type") + theme(plot.title = element_text(hjust = 0.5), title=element_text(size=17), axis.text=element_text(size=9), axis.title=element_text(size=15), legend.text=element_text(size=13))
plot8 <- plot8 + scale_x_continuous(breaks = c(2001:2012))
plot8 <- plot8 + annotate("text", x = 2004, y = 250, label = paste("TWRR w/ High Value ", returns[13,2], "%", sep = ""), size = 3)
plot8 <- plot8 + annotate("text", x = 2004, y = 240, label = paste("TWRR w/o High Value ", returns2[13,2], "%", sep = ""), size = 3)
plot8
dev.off()
